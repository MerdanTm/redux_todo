{"version":3,"sources":["redux/actions.js","components/TodoInput.js","components/TodoItem.js","components/TodoList.js","App.js","reportWebVitals.js","redux/states.js","redux/store.js","redux/reducer.js","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","TodoInput","useState","name","setName","dispatch","useDispatch","class","value","onChange","e","target","type","onClick","todo","id","uuid","payload","TodoItem","editable","setEditable","updateTodo","todoId","TodoList","todos","useSelector","state","length","map","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","newTodos","action","filter","index","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97784aca.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\n\r\nexport const addTodo = (todo) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload: todo,\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (todoId) => {\r\n  return {\r\n    type: DELETE_TODO,\r\n    payload: todoId,\r\n  };\r\n};\r\n\r\nexport const updateTodo = (todo) => {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    payload: todo,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../redux/actions\";\r\nimport { v1 as uuid } from \"uuid\";\r\n\r\nfunction TodoInput() {\r\n  const [name, setName] = useState();\r\n  let dispatch = useDispatch();\r\n\r\n  return (\r\n    <div class=\"input-group mb-3\">\r\n      <input\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        class=\"col form-control m-1\"\r\n        type=\"text\"\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          dispatch(\r\n            addTodo({\r\n              id: uuid(),\r\n              name: name,\r\n            })\r\n          );\r\n          setName(\"\");\r\n        }}\r\n        class=\"btn btn-primary m-1\"\r\n        type=\"button\"\r\n      >\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoInput;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteTodo, updateTodo } from \"../redux/actions\";\r\n\r\nfunction TodoItem({ todo }) {\r\n  let dispatch = useDispatch();\r\n  const [name, setName] = useState(todo.name);\r\n  const [editable, setEditable] = useState(false);\r\n  return (\r\n    <div>\r\n      <div class=\"input-group mb-3\">\r\n        <div class=\"col\">\r\n          {editable ? (\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control m-1\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          ) : (\r\n            <h4>{todo.name}</h4>\r\n          )}\r\n        </div>\r\n        <button\r\n          onClick={() => {\r\n            dispatch(\r\n              updateTodo({\r\n                ...todo,\r\n                name: name,\r\n              })\r\n            );\r\n            if (editable) {\r\n              setName(todo.name);\r\n            }\r\n            setEditable(!editable);\r\n          }}\r\n          class=\"btn btn-primary m-1\"\r\n          type=\"button\"\r\n        >\r\n          {editable ? \"Update\" : \"Edit\"}\r\n        </button>\r\n        <button\r\n          onClick={() => dispatch(deleteTodo(todo.id))}\r\n          class=\"btn btn-danger m-1\"\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction TodoList() {\r\n  let todos = useSelector((state) => state);\r\n  return (\r\n    <div>\r\n      {todos.length ? (\r\n        <h2>Add Your Todo List</h2>\r\n      ) : (\r\n        <h2>Your Todo List is Empty</h2>\r\n      )}\r\n      <ol>\r\n        {todos.map((todo) => (\r\n          <li key={todo.id}>\r\n            <TodoItem todo={todo} />\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import \"./App.css\";\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nfunction App() {\n  return (\n    <div className=\"App m-5\">\n      <TodoInput />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const todos = [\r\n  {\r\n    id: 1,\r\n    name: \"One\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Two\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Three\",\r\n  },\r\n];\r\n","import { createStore } from \"redux\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nexport const store = createStore(reducer);\r\n","import { ADD_TODO, DELETE_TODO, UPDATE_TODO } from \"./actions\";\r\nimport { todos } from \"./states\";\r\n\r\nexport let reducer = (state = todos, action) => {\r\n  let newTodos;\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      newTodos = [...state, action.payload];\r\n      //   newTodos.push(action.payload);\r\n      return newTodos;\r\n\r\n    case DELETE_TODO:\r\n      newTodos = [...state];\r\n      newTodos = newTodos.filter((todo) => todo.id != action.payload);\r\n      return newTodos;\r\n\r\n    case UPDATE_TODO:\r\n      newTodos = [...state];\r\n      let index = -1;\r\n      for (let i = 0; i < newTodos.length; i++) {\r\n        index++;\r\n        if (newTodos[i].id == action.payload.id) {\r\n          break;\r\n        }\r\n      }\r\n      if (index != -1) {\r\n        newTodos[index] = action.payload;\r\n        return newTodos;\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}